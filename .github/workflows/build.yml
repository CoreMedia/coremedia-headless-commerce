# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow runs the default build and recreates the local Maven repository
# cache whenever POM changes are detected. The cache is stored for later use by
# this and other workflows. As downloading all Maven artifacts to build up the
# local repository and cache it can take very long, please follow these rules:
# - Further pipeline workflows executing Maven builds should depend on this one.
# - This workflow should run all Maven goals and profiles that are also needed
#   by the dependants, so that all required artifacts are cached.

name: Build

on:
  workflow_call:
    secrets:
      nexus_user:
        required: true
      nexus_password:
        required: true
    outputs:
      teams_fact:
        value: |
          {
            "name": "Maven Build:",
            "value": "${{ jobs.maven.outputs.result }}"
          }

jobs:
  maven:
    name: Maven
    runs-on: ubuntu-latest
    env:
      PLUGINS_NEXUS_USER: ${{ secrets.nexus_user }}
      PLUGINS_NEXUS_PASSWORD: ${{ secrets.nexus_password }}
    permissions:
      contents: write # for advanced-security/maven-dependency-submission-action to to submit dependencies
    outputs:
      result: ${{ job.status }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
          server-id: coremedia.external.releases
          server-username: PLUGINS_NEXUS_USER
          server-password: PLUGINS_NEXUS_PASSWORD
          cache: maven

      - name: Run Maven Build
        run: |
          mvn --batch-mode --fail-at-end \
              install javadoc:javadoc \
              -Pintegration-test,default-image,docs-third-party \
              -Dsort.verifyFail=stop

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive.
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@v3
