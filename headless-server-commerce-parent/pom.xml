<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.9</version>
    <relativePath/>
  </parent>

  <groupId>com.coremedia.commerce.labs</groupId>
  <artifactId>headless-server-commerce-parent</artifactId>
  <version>2.0.5-RC-SNAPSHOT</version>
  <packaging>pom</packaging>

  <organization>
    <name>CoreMedia AG</name>
    <url>http://www.coremedia.com/</url>
  </organization>
  <licenses>
    <license>
      <name>CoreMedia Proprietary License</name>
    </license>
  </licenses>

  <properties>
    <java.version>11</java.version>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <cms.version>2301.1</cms.version>
    <springfox.version>3.0.0</springfox.version>
    <graphiql-spring-boot-starter.version>11.1.0</graphiql-spring-boot-starter.version>
    <caffeine.version>3.1.4</caffeine.version>
    <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>
    <maven-failsafe-plugin.version>3.0.0-M9</maven-failsafe-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M9</maven-surefire-plugin.version>
    <maven-enforcer-plugin.version>3.2.1</maven-enforcer-plugin.version>
    <showDeprecation>true</showDeprecation>
    <showWarnings>true</showWarnings>
    <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
    <sortpom-maven-plugin.version>3.2.1</sortpom-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>common-core-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>common-thirdparty-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>headless-server-core-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>headless-server-thirdparty-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>middle-core-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>caffeine</artifactId>
        <version>${caffeine.version}</version>
      </dependency>
      <dependency>
        <groupId>com.graphql-java-kickstart</groupId>
        <artifactId>graphiql-spring-boot-starter</artifactId>
        <version>${graphiql-spring-boot-starter.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>${springfox.version}</version>
        <scope>runtime</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!--
    JUnit Jupiter engines are required as test dependencies in almost every module. When they're forgotten
    to be configured for a module, tests aren't executed in a Maven build, often even without noticing. And
    as they don't cause trouble when they're not needed, it's safe to define them globally for all modules.
  -->
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>coremedia.external.releases</id>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>coremedia.external.releases</id>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>${sortpom-maven-plugin.version}</version>
          <configuration>
            <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
            <sortDependencies>groupId,artifactId</sortDependencies>
            <sortPlugins>groupId,artifactId</sortPlugins>
            <sortModules>true</sortModules>
            <expandEmptyElements>false</expandEmptyElements>
            <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
            <keepBlankLines>true</keepBlankLines>
            <ignoreLineSeparators>false</ignoreLineSeparators>
            <lineSeparator>\n</lineSeparator>
            <createBackupFile>false</createBackupFile>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>3.3.1</version>
          <dependencies>
            <dependency>
              <groupId>com.google.cloud.tools</groupId>
              <artifactId>jib-ownership-extension-maven</artifactId>
              <version>0.1.0</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
              </exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>build-info</id>
              <goals>
                <goal>build-info</goal>
              </goals>
              <configuration>
                <additionalProperties>
                  <java.version>${java.version}</java.version>
                </additionalProperties>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>sort-pom</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>analyze-dependencies</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <configuration>
              <failOnWarning>true</failOnWarning>
              <ignoreNonCompile>true</ignoreNonCompile>
              <ignoredDependencies>
                <ignoredDependency>org.springframework.boot:spring-boot-configuration-processor</ignoredDependency>
                <ignoredDependency>org.springframework.boot:spring-boot-autoconfigure-processor</ignoredDependency>
              </ignoredDependencies>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-banned-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <!-- use jakarta.annotation:jakarta.annotation-api instead -->
                    <exclude>javax.annotation:javax.annotation-api</exclude>
                  </excludes>
                  <searchTransitive>true</searchTransitive>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[11,)</version>
                </requireJavaVersion>
                <DependencyConvergence/>
                <bannedDependencies>
                  <excludes>
                    <!-- use spring utilities instead -->
                    <exclude>commons-beanutils:commons-beanutils</exclude>
                    <!-- exclude commons-httpclient, use org.apache.httpcomponents:httpclient instead-->
                    <exclude>commons-httpclient:commons-httpclient</exclude>
                    <!-- excluded because of conflict with logback -->
                    <exclude>commons-logging:commons-logging:*</exclude>
                    <!-- use hibernate validator instead -->
                    <exclude>commons-validator:commons-validator:*</exclude>
                    <!-- excluded because already included in jdk 6 -->
                    <exclude>stax:stax-api</exclude>
                    <exclude>org.apache.geronimo.specs:geronimo-stax-api_1.0_spec</exclude>
                    <exclude>org.mockito:mockito-all</exclude>
                    <!-- excluded servlet, jsp, and el APIs because the new artifactIds changed,
                                             and we do not want to include both old and new versions -->
                    <exclude>javax.servlet:servlet-api</exclude>
                    <exclude>javax.servlet.jsp:jsp-api</exclude>
                    <exclude>javax.servlet.jsp.jstl:jstl-api</exclude>
                    <exclude>javax.el:el-api</exclude>
                    <!-- too old -->
                    <exclude>jmock:jmock</exclude>
                    <exclude>jmock:jmock-cglib</exclude>

                    <!-- exclude, and include only with scope "provided" -->
                    <exclude>com.github.spotbugs:spotbugs-annotations</exclude>
                    <exclude>com.google.code.findbugs:jsr305</exclude>
                    <exclude>javax.servlet:javax.servlet-api</exclude>
                    <!-- junit:junit vs. junit:junit-dep: Since JUnit 4.11 junit-dep just relocates to
                         junit and files a warning when used. Thus excluding it here. -->
                    <exclude>junit:junit-dep</exclude>
                    <exclude>xalan:xalan</exclude>
                    <exclude>xerces:xercesImpl</exclude>
                    <exclude>xml-apis:xml-apis</exclude>
                    <exclude>rhino:js</exclude>
                    <!-- uses GPL -->
                    <exclude>net.joala:*</exclude>
                    <!-- JDK5 -->
                    <exclude>com.google.guava:guava-jdk5</exclude>

                    <!-- use Spring MVC -->
                    <exclude>com.sun.jersey*</exclude>

                    <exclude>javax.activation:activation</exclude>
                    <!-- use com.sun.activation:jakarta-activation instead -->
                    <exclude>javax.activation:activation-api</exclude>
                    <!-- use com.sun.activation:jakarta-activation instead -->
                    <exclude>com.sun.activation:javax.activation</exclude>
                    <!-- use com.sun.activation:jakarta-activation instead -->
                    <exclude>jakarta.activation:jakarta.activation-api</exclude>
                    <!-- use com.sun.activation:jakarta-activation instead -->
                    <exclude>javax.annotation:javax.annotation-api</exclude>
                    <!-- use jakarta.annotation:jakarta.annotation-api instead -->
                    <exclude>com.sun.mail:javax.mail</exclude>
                    <!-- use com.sun.mail:jakarta-mail instead -->
                    <exclude>javax.transaction:javax.transaction-api</exclude>
                    <!-- use jakarta.transaction:jakarta-transaction-api instead -->
                    <exclude>javax.xml.bind:jaxb-api</exclude>
                    <!-- use jakarta.xml.bind:jakarta.xml.bind-api instead -->
                    <exclude>com.sun.xml.bind:*</exclude>
                    <!-- use org.glassfish.jaxb:jaxb-runtime instead -->
                  </excludes>
                  <includes>
                    <!--
                      Do not even allow scope "test", since it overrides a transitive "provided".
                      S. http://www.sonatype.com/books/mvnref-book/reference/pom-relationships-sect-project-dependencies.html#pom-relationships-sect-transitive
                    -->
                    <include>com.github.spotbugs:spotbugs-annotations:*:*:provided</include>
                    <include>com.google.code.findbugs:jsr305:*:*:provided</include>
                    <include>javax.servlet:javax.servlet-api:*:*:provided</include>
                  </includes>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
          <execution>
            <id>enforce-test</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <!-- exclude, and include only with scope "test" -->
                    <exclude>org.assertj:*</exclude>
                    <exclude>org.eclipse.jetty:*:(,9)</exclude>
                    <exclude>org.jmock:*</exclude>
                    <exclude>org.junit:*</exclude>
                    <exclude>org.junit.jupiter:*</exclude>
                    <exclude>org.junit.platform:*</exclude>
                    <exclude>org.mockito:*</exclude>
                    <exclude>org.powermock:*</exclude>
                    <exclude>org.springframework:spring-test</exclude>
                    <exclude>org.springframework.boot:spring-boot-test</exclude>
                  </excludes>
                  <includes>
                    <!-- enforce scope "test" -->
                    <include>org.assertj:*:*:*:test</include>
                    <include>org.eclipse.jetty:*:*:*:test</include>
                    <include>org.junit:*:*:*:test</include>
                    <include>org.junit.jupiter:*:*:*:test</include>
                    <include>org.junit.platform:*:*:*:test</include>
                    <include>org.mockito:*:*:*:test</include>
                    <include>org.powermock:*:*:*:test</include>
                    <include>org.springframework:spring-test:*:*:test</include>
                    <include>org.springframework.boot:spring-boot-test:*:*:test</include>
                  </includes>
                  <searchTransitive>true</searchTransitive>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>integration-test</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
