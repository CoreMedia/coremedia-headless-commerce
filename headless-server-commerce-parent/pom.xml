<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.9.RELEASE</version>
    <relativePath />
  </parent>

  <groupId>com.coremedia.commerce.labs</groupId>
  <artifactId>headless-server-commerce-parent</artifactId>
  <version>0.0.3-SNAPSHOT</version>
  <packaging>pom</packaging>

  <organization>
    <name>CoreMedia AG</name>
    <url>http://www.coremedia.com/</url>
  </organization>
  <licenses>
    <license>
      <name>CoreMedia Proprietary License</name>
    </license>
  </licenses>

  <properties>
    <java.version>11</java.version>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <cms.version>2010.2</cms.version>
    <graphql-java.version>15.0</graphql-java.version>
    <graphql-java-extended-scalars.version>15.0.0</graphql-java-extended-scalars.version>
    <graphql-java-spring-boot-starter.version>2.0</graphql-java-spring-boot-starter.version>
    <graphiql-spring-boot-starter.version>5.6.0</graphiql-spring-boot-starter.version>
    <graphql-java-dataloader.version>2.2.3</graphql-java-dataloader.version>
    <springfox.version>2.9.2</springfox.version>
    <org-glassfish-pfl.version>4.1.0</org-glassfish-pfl.version>

    <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>

    <!--this property can be either an organisational prefix or a complete registry prefix-->
    <docker.repository.prefix>coremedia</docker.repository.prefix>
    <!--this property must be unique for each image-->
    <docker.repository.suffix>${project.build.finalName}</docker.repository.suffix>
    <docker.image.tag>${project.version}</docker.image.tag>
    <!--used as docker build args-->
    <docker.java-application-base-image.repo>coremedia/java-application-base</docker.java-application-base-image.repo>
    <docker.java-application-base-image.tag>2.1.3</docker.java-application-base-image.tag>

    <!-- plugin versions not inherited from spring-boot-starter-parent (or overwritten) -->
    <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
    <protobuf-maven-plugin.version>0.5.1</protobuf-maven-plugin.version>
    <sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>
    <sortpom-maven-plugin.version>2.10.0</sortpom-maven-plugin.version>

    <!-- extension versions -->
    <os-maven-plugin.version>1.6.0</os-maven-plugin.version>

    <!-- dependency versions not inherited from spring-boot-starter-parent (or overwritten) -->
    <assertj.version>3.14.0</assertj.version>
    <guava.version>29.0-jre</guava.version>
    <logback-elasticsearch-appender.version>1.6</logback-elasticsearch-appender.version>
    <spotbugs.version>3.1.8</spotbugs.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.coremedia.blueprint</groupId>
        <artifactId>lc-asset-services</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.blueprint.base</groupId>
        <artifactId>bpbase-headless-server-core</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.blueprint.base</groupId>
        <artifactId>bpbase-lc-client</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.blueprint.base</groupId>
        <artifactId>bpbase-lc-common</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.blueprint.base</groupId>
        <artifactId>bpbase-settings-api</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.blueprint.base</groupId>
        <artifactId>bpbase-settings-impl</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.blueprint.boot</groupId>
        <artifactId>blueprint-spring-boot-autoconfigure</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.caas</groupId>
        <artifactId>headless-server-core</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.caas</groupId>
        <artifactId>headless-server-web</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>cap-multisite</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>cap-unified-api</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>coremedia-cache</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>coremedia-common</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>coremedia-id</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>coremedia-spring</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.coremedia.livecontext</groupId>
        <artifactId>lc-ecommerce-api</artifactId>
        <version>${cms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>${spotbugs.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>2.4.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>3.11.4</version>
      </dependency>
      <dependency>
        <groupId>com.graphql-java</groupId>
        <artifactId>graphql-java</artifactId>
        <version>${graphql-java.version}</version>
      </dependency>
      <dependency>
        <groupId>com.graphql-java</groupId>
        <artifactId>graphql-java-extended-scalars</artifactId>
        <version>${graphql-java-extended-scalars.version}</version>
      </dependency>
      <dependency>
        <groupId>com.graphql-java</groupId>
        <artifactId>graphql-java-spring-webmvc</artifactId>
        <version>${graphql-java-spring-boot-starter.version}</version>
      </dependency>
      <dependency>
        <groupId>com.graphql-java</groupId>
        <artifactId>java-dataloader</artifactId>
        <version>${graphql-java-dataloader.version}</version>
      </dependency>
      <dependency>
        <groupId>com.graphql-java-kickstart</groupId>
        <artifactId>graphiql-spring-boot-starter</artifactId>
        <version>${graphiql-spring-boot-starter.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>com.internetitem</groupId>
        <artifactId>logback-elasticsearch-appender</artifactId>
        <version>${logback-elasticsearch-appender.version}</version>
      </dependency>
      <dependency>
        <groupId>com.jhlabs</groupId>
        <artifactId>filters</artifactId>
        <version>2.0.235-1</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-api</artifactId>
        <version>1.31.1</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-stub</artifactId>
        <version>1.31.1</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>${springfox.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>1.5.21</version>
      </dependency>
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>3.4.1</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.pfl</groupId>
        <artifactId>pfl-asm</artifactId>
        <version>${org-glassfish-pfl.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.pfl</groupId>
        <artifactId>pfl-basic</artifactId>
        <version>${org-glassfish-pfl.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.pfl</groupId>
        <artifactId>pfl-tf</artifactId>
        <version>${org-glassfish-pfl.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ow2.asm</groupId>
        <artifactId>asm</artifactId>
        <version>8.0.1</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!--
    JUnit Jupiter engines are required as test dependencies in almost every module. When they're forgotten
    to be configured for a module, tests aren't executed in a Maven build, often even without noticing. And
    as they don't cause trouble when they're not needed, it's safe to define them globally for all modules.
  -->
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>${sortpom-maven-plugin.version}</version>
          <configuration>
            <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
            <sortDependencies>groupId,artifactId</sortDependencies>
            <sortPlugins>groupId,artifactId</sortPlugins>
            <sortModules>true</sortModules>
            <expandEmptyElements>false</expandEmptyElements>
            <keepBlankLines>true</keepBlankLines>
            <ignoreLineSeparators>false</ignoreLineSeparators>
            <lineSeparator>\n</lineSeparator>
            <createBackupFile>false</createBackupFile>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>dockerfile-maven-plugin</artifactId>
          <version>1.4.12</version>
          <configuration>
            <!--if set to true you cannot build offline-->
            <pullNewerImage>false</pullNewerImage>
            <!--via repository the complete image name is defined-->
            <repository>${docker.repository.prefix}/${docker.repository.suffix}</repository>
            <useMavenSettingsForAuth>false</useMavenSettingsForAuth>
            <tag>${docker.image.tag}</tag>
            <buildArgs combine.children="append">
              <JAVA_APPLICATION_BASE_IMAGE_REPO>${docker.java-application-base-image.repo}</JAVA_APPLICATION_BASE_IMAGE_REPO>
              <JAVA_APPLICATION_BASE_IMAGE_TAG>${docker.java-application-base-image.tag}</JAVA_APPLICATION_BASE_IMAGE_TAG>
            </buildArgs>
          </configuration>
          <executions>
            <!--
             | you can skip the whole docker process using the system property dockerfile.skip
             -->
            <execution>
              <!--
               | you can skip building the image using the system property dockerfile.build.skip
               -->
              <id>docker-build</id>
              <goals>
                <goal>build</goal>
              </goals>
              <phase>install</phase>
            </execution>
            <execution>
              <id>docker-push</id>
              <!--
               | you can skip pushing the image using the system property dockerfile.push.skip
               -->
              <goals>
                <goal>push</goal>
              </goals>
              <phase>deploy</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
              </exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>build-info</id>
              <goals>
                <goal>build-info</goal>
              </goals>
              <configuration>
                <additionalProperties>
                  <java.version>${java.version}</java.version>
                </additionalProperties>
              </configuration>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>sort-pom</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>analyze-dependencies</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <configuration>
              <failOnWarning>true</failOnWarning>
              <ignoreNonCompile>true</ignoreNonCompile>
              <ignoredDependencies>
                <ignoredDependency>org.springframework.boot:spring-boot-configuration-processor</ignoredDependency>
                <ignoredDependency>org.springframework.boot:spring-boot-autoconfigure-processor</ignoredDependency>
              </ignoredDependencies>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-banned-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <!-- use jakarta.annotation:jakarta.annotation-api instead -->
                    <exclude>javax.annotation:javax.annotation-api</exclude>
                  </excludes>
                  <searchTransitive>true</searchTransitive>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[11,)</version>
                </requireJavaVersion>
                <DependencyConvergence />
                <bannedDependencies>
                  <excludes>
                    <!-- use spring utilities instead -->
                    <exclude>commons-beanutils:commons-beanutils</exclude>
                    <!-- exclude commons-httpclient, use org.apache.httpcomponents:httpclient instead-->
                    <exclude>commons-httpclient:commons-httpclient</exclude>
                    <!-- excluded because of conflict with logback -->
                    <exclude>commons-logging:commons-logging:*</exclude>
                    <!-- use hibernate validator instead -->
                    <exclude>commons-validator:commons-validator:*</exclude>
                    <!-- excluded because already included in jdk 6 -->
                    <exclude>stax:stax-api</exclude>
                    <exclude>org.apache.geronimo.specs:geronimo-stax-api_1.0_spec</exclude>
                    <exclude>org.mockito:mockito-all</exclude>
                    <!-- excluded servlet, jsp, and el APIs because the new artifactIds changed,
                                             and we do not want to include both old and new versions -->
                    <exclude>javax.servlet:servlet-api</exclude>
                    <exclude>javax.servlet.jsp:jsp-api</exclude>
                    <exclude>javax.servlet.jsp.jstl:jstl-api</exclude>
                    <exclude>javax.el:el-api</exclude>
                    <!-- too old -->
                    <exclude>jmock:jmock</exclude>
                    <exclude>jmock:jmock-cglib</exclude>

                    <!-- exclude, and include only with scope "provided" -->
                    <exclude>com.github.spotbugs:spotbugs-annotations</exclude>
                    <exclude>com.google.code.findbugs:jsr305</exclude>
                    <exclude>javax.servlet:javax.servlet-api</exclude>
                    <!-- junit:junit vs. junit:junit-dep: Since JUnit 4.11 junit-dep just relocates to
                         junit and files a warning when used. Thus excluding it here. -->
                    <exclude>junit:junit-dep</exclude>
                    <exclude>xalan:xalan</exclude>
                    <exclude>xerces:xercesImpl</exclude>
                    <exclude>xml-apis:xml-apis</exclude>
                    <exclude>rhino:js</exclude>
                    <!-- uses GPL -->
                    <exclude>net.joala:*</exclude>
                    <!-- JDK5 -->
                    <exclude>com.google.guava:guava-jdk5</exclude>

                    <!-- use Spring MVC -->
                    <exclude>com.sun.jersey*</exclude>

                    <exclude>javax.activation:activation</exclude>
                    <!-- use com.sun.activation:jakarta-activation instead -->
                    <exclude>javax.activation:activation-api</exclude>
                    <!-- use com.sun.activation:jakarta-activation instead -->
                    <exclude>com.sun.activation:javax.activation</exclude>
                    <!-- use com.sun.activation:jakarta-activation instead -->
                    <exclude>jakarta.activation:jakarta.activation-api</exclude>
                    <!-- use com.sun.activation:jakarta-activation instead -->
                    <exclude>javax.annotation:javax.annotation-api</exclude>
                    <!-- use jakarta.annotation:jakarta.annotation-api instead -->
                    <exclude>com.sun.mail:javax.mail</exclude>
                    <!-- use com.sun.mail:jakarta-mail instead -->
                    <exclude>javax.transaction:javax.transaction-api</exclude>
                    <!-- use jakarta.transaction:jakarta-transaction-api instead -->
                    <exclude>javax.xml.bind:jaxb-api</exclude>
                    <!-- use jakarta.xml.bind:jakarta.xml.bind-api instead -->
                    <exclude>com.sun.xml.bind:*</exclude>
                    <!-- use org.glassfish.jaxb:jaxb-runtime instead -->
                  </excludes>
                  <includes>
                    <!--
                      Do not even allow scope "test", since it overrides a transitive "provided".
                      S. http://www.sonatype.com/books/mvnref-book/reference/pom-relationships-sect-project-dependencies.html#pom-relationships-sect-transitive
                    -->
                    <include>com.github.spotbugs:spotbugs-annotations:*:*:provided</include>
                    <include>com.google.code.findbugs:jsr305:*:*:provided</include>
                    <include>javax.servlet:javax.servlet-api:*:*:provided</include>
                  </includes>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
          <execution>
            <id>enforce-test</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <!-- exclude, and include only with scope "test" -->
                    <exclude>org.assertj:*</exclude>
                    <exclude>org.eclipse.jetty:*:(,9)</exclude>
                    <exclude>org.jmock:*</exclude>
                    <exclude>org.junit:*</exclude>
                    <exclude>org.junit.jupiter:*</exclude>
                    <exclude>org.junit.platform:*</exclude>
                    <exclude>org.mockito:*</exclude>
                    <exclude>org.powermock:*</exclude>
                    <exclude>org.springframework:spring-test</exclude>
                    <exclude>org.springframework.boot:spring-boot-test</exclude>
                  </excludes>
                  <includes>
                    <!-- enforce scope "test" -->
                    <include>org.assertj:*:*:*:test</include>
                    <include>org.eclipse.jetty:*:*:*:test</include>
                    <include>org.junit:*:*:*:test</include>
                    <include>org.junit.jupiter:*:*:*:test</include>
                    <include>org.junit.platform:*:*:*:test</include>
                    <include>org.mockito:*:*:*:test</include>
                    <include>org.powermock:*:*:*:test</include>
                    <include>org.springframework:spring-test:*:*:test</include>
                    <include>org.springframework.boot:spring-boot-test:*:*:test</include>
                  </includes>
                  <searchTransitive>true</searchTransitive>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>integration-test</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
