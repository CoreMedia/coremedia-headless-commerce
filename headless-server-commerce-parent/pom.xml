<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.4</version>
    <relativePath/>
  </parent>

  <groupId>com.coremedia.commerce.labs</groupId>
  <artifactId>headless-server-commerce-parent</artifactId>
  <version>2.1.7-RC-SNAPSHOT</version>
  <packaging>pom</packaging>

  <organization>
    <name>CoreMedia AG</name>
    <url>http://www.coremedia.com/</url>
  </organization>
  <licenses>
    <license>
      <name>CoreMedia Proprietary License</name>
    </license>
  </licenses>

  <properties>
    <java.version>17</java.version>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <showDeprecation>true</showDeprecation>
    <showWarnings>true</showWarnings>

    <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>

    <!-- versions managed in project -->
    <cms.version>2506.0.0</cms.version>
    <jetty.version>12.0.21</jetty.version>
    <sonar-maven-plugin.version>5.1.0.4751</sonar-maven-plugin.version>
    <sortpom-maven-plugin.version>4.0.0</sortpom-maven-plugin.version>
    <springfox.version>3.0.0</springfox.version>
    <coremedia-enforcer-rules.version>2.0.5</coremedia-enforcer-rules.version>
    <slf4j.version>2.0.17</slf4j.version>

    <!-- versions managed in com.coremedia.cms BOMs (overwrites) -->
    <tomcat.version>10.1.44</tomcat.version>
    <commons-lang3.version>3.18.0</commons-lang3.version>
    <spring-framework.version>6.2.9</spring-framework.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Override Jetty dependency versions. This import must precede the imports of the CMS BOMs. -->
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-bom</artifactId>
        <version>${jetty.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <!-- Override Spring Framework dependency versions. This import must precede the imports of the CMS BOMs. -->
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring-framework.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>common-core-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>common-thirdparty-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>headless-server-core-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>headless-server-thirdparty-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>middle-core-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.caas</groupId>
        <artifactId>headless-server-core</artifactId>
        <version>${cms.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-bom</artifactId>
        <version>${slf4j.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!--
    JUnit Jupiter engines are required as test dependencies in almost every module. When they're forgotten
    to be configured for a module, tests aren't executed in a Maven build, often even without noticing. And
    as they don't cause trouble when they're not needed, it's safe to define them globally for all modules.
  -->
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>coremedia.external.releases</id>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>coremedia.external.releases</id>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>${sortpom-maven-plugin.version}</version>
          <configuration>
            <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
            <!-- Sorting dependencies in dependency management would break BOM import precedence. -->
            <sortDependencyManagement>NONE</sortDependencyManagement>
            <sortDependencies>groupId,artifactId</sortDependencies>
            <sortPlugins>groupId,artifactId</sortPlugins>
            <sortModules>true</sortModules>
            <expandEmptyElements>false</expandEmptyElements>
            <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
            <keepBlankLines>true</keepBlankLines>
            <ignoreLineSeparators>false</ignoreLineSeparators>
            <lineSeparator>\n</lineSeparator>
            <createBackupFile>false</createBackupFile>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>3.4.6</version>
          <dependencies>
            <dependency>
              <groupId>com.google.cloud.tools</groupId>
              <artifactId>jib-layer-filter-extension-maven</artifactId>
              <version>0.3.0</version>
            </dependency>
            <dependency>
              <groupId>com.google.cloud.tools</groupId>
              <artifactId>jib-ownership-extension-maven</artifactId>
              <version>0.1.0</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
              </exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>build-info</id>
              <goals>
                <goal>build-info</goal>
              </goals>
              <configuration>
                <additionalProperties>
                  <java.version>${java.version}</java.version>
                </additionalProperties>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>sort-pom</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>analyze-dependencies</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <configuration>
              <failOnWarning>true</failOnWarning>
              <ignoreNonCompile>true</ignoreNonCompile>
              <ignoredDependencies>
                <ignoredDependency>org.springframework.boot:spring-boot-configuration-processor</ignoredDependency>
                <ignoredDependency>org.springframework.boot:spring-boot-autoconfigure-processor</ignoredDependency>
              </ignoredDependencies>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>com.coremedia.cms</groupId>
            <artifactId>common-banned-dependencies</artifactId>
            <version>${cms.version}</version>
          </dependency>
          <dependency>
            <groupId>com.coremedia.maven</groupId>
            <artifactId>coremedia-enforcer-rules</artifactId>
            <version>${coremedia-enforcer-rules.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>enforce-onerepo-rules</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <rules>
                <oneRepoEnforcerRule />
                <modularOneRepoEnforcerRule>
                  <enforceNoCoreToBlueprintDependencies>true</enforceNoCoreToBlueprintDependencies>
                </modularOneRepoEnforcerRule>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>integration-test</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
