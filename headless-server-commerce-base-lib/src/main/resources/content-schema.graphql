
extend type Query {
  content: ContentRoot
}

type ContentRoot {
  content(id: String!, type: String): Content_ @fetch(from: "getContent(#id,#type)")
}

interface Content_ {
  id: ID!
  creationDate: String!
  modificationDate: String!
  name: String!
  type: String!
  repositoryPath: String!
}

type Content_Impl implements Content_ {
  id: ID! @fetch(from: "@graphQlLinkComposer.apply(#root).orElse(null)?.id")
  creationDate: String!
  modificationDate: String!
  name: String!
  type: String!
  repositoryPath: String! @fetch(from: "#root.getParent().getPath()")
}
