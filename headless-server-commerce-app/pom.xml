<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.coremedia.commerce.labs</groupId>
    <artifactId>headless-server-commerce-parent</artifactId>
    <version>2.1.6-RC</version>
    <relativePath>../headless-server-commerce-parent</relativePath>
  </parent>
  <artifactId>headless-server-commerce-app</artifactId>
  <description>Commerce Headless Server Application</description>

  <properties>
    <application.image-base>coremedia/java-application-base:2.0-cm-17.0-corretto</application.image-base>
    <application.image-prefix>coremedia</application.image-prefix>
    <application.image-suffix>${project.build.finalName}</application.image-suffix>
    <application.image-tag>${project.version}</application.image-tag>
    <jib.goal>dockerBuild</jib.goal>
    <jib.skip>true</jib.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>cap-client-xml</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.coremedia.commerce.labs</groupId>
      <artifactId>headless-server-commerce-base-lib</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.coremedia.commerce.labs</groupId>
      <artifactId>headless-server-commerce-lib</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- third-party libs -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>headless-server-commerce</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <configuration>
            <container>
              <appRoot>/coremedia</appRoot>
              <ports>
                <!--Servlet Container Port -->
                <port>8080</port>
                <!--Actuator Port-->
                <port>8081</port>
                <!--Prometheus Agent Port-->
                <port>8199</port>
              </ports>
              <workingDirectory>/coremedia</workingDirectory>
            </container>
            <from>
              <image>${application.image-base}</image>
            </from>
            <to>
              <image>${application.image-prefix}/${application.image-suffix}</image>
              <tags>
                <tag>${application.image-tag}</tag>
              </tags>
            </to>
          </configuration>
          <executions>
            <execution>
              <id>build-container-image</id>
              <goals>
                <goal>${jib.goal}</goal>
              </goals>
              <phase>install</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layers>
            <enabled>true</enabled>
          </layers>
          <mainClass>com.coremedia.blueprint.boot.headlessserver.HeadlessServerCommerceApp</mainClass>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>default-image</id>
      <properties>
        <jib.skip>false</jib.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <configuration>
              <container>
                <args>
                  <arg>application</arg>
                </args>
                <entrypoint>INHERIT</entrypoint>
                <environment>
                  <JAVA_HEAP>1g</JAVA_HEAP>
                  <JAVA_PARALLEL_GC>true</JAVA_PARALLEL_GC>
                  <SPRING_BOOT_EXPLODED_APP>true</SPRING_BOOT_EXPLODED_APP>
                  <SPRING_BOOT_EXPLODED_CLASSPATH>@jib-classpath-file</SPRING_BOOT_EXPLODED_CLASSPATH>
                  <SPRING_BOOT_EXPLODED_MAINCLASS>@jib-main-class-file</SPRING_BOOT_EXPLODED_MAINCLASS>
                </environment>
                <user>coremedia:coremedia</user>
              </container>
              <pluginExtensions>
                <pluginExtension>
                  <configuration implementation="com.google.cloud.tools.jib.maven.extension.ownership.Configuration">
                    <rules>
                      <rule>
                        <glob>/coremedia**</glob>
                        <ownership>1000:1000</ownership>
                      </rule>
                    </rules>
                  </configuration>
                  <implementation>com.google.cloud.tools.jib.maven.extension.ownership.JibOwnershipExtension</implementation>
                </pluginExtension>
              </pluginExtensions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
